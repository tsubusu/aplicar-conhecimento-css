{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/*\r\n O que esse injectable está dizendo? É que na verdade o Angular trabalha muito\r\n com o conceito de injeção de dependência, e o que esse injectable está dizendo\r\n  é que posso invocar uma instância dessa classe através do construtor.\r\n */\n\nexport let TransferenciaService = /*#__PURE__*/(() => {\n  class TransferenciaService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'http.....';\n      this.transferencias = [];\n    }\n\n    get listaTransferencias() {\n      return this.transferencias;\n    }\n\n    todas() {\n      // return this.http.get<Transferencia[]>(this.url);\n      return of([{\n        valor: 1,\n        destino: '2'\n      }, {\n        valor: 3,\n        destino: '4'\n      }]);\n    }\n\n    adicionar(transferencia) {\n      //this.http.post<Transferencia>(this.url, transferencia);\n      this.hidratar(transferencia);\n      this.transferencias.push(transferencia);\n      return of(transferencia);\n    }\n\n    hidratar(transferencia) {\n      transferencia.data = new Date();\n    }\n\n  }\n\n  TransferenciaService.ɵfac = function TransferenciaService_Factory(t) {\n    return new (t || TransferenciaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TransferenciaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TransferenciaService,\n    factory: TransferenciaService.ɵfac,\n    providedIn: 'root' //\n\n  });\n  return TransferenciaService;\n})();","map":null,"metadata":{},"sourceType":"module"}